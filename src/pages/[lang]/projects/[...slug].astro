---
import ProjetoPageLayout from '@layouts/ProjetoPageLayout.astro';
import type { MdFrontmatter } from '@src/types';
import type { MarkdownInstance } from 'astro';

export async function getStaticPaths() {
	const locales: ['en-US', 'pt-BR'] = ['en-US', 'pt-BR'];
	const brProjetos: MarkdownInstance<Record<string, any>>[] = await Astro.glob('@projetos/pt-BR/*.md');
	const enProjetos: MarkdownInstance<Record<string, any>>[] = await Astro.glob('@projetos/en-US/*.md');

	const nomesProjetos = Array.from(
		new Set([
			...brProjetos.map((projeto) => projeto.file.split('/').pop()!.slice(0, -3)),
			...enProjetos.map((projeto) => projeto.file.split('/').pop()!.slice(0, -3))
		])
	);

	return locales.flatMap((locale) =>
		nomesProjetos.map((nome) => ({
			params: { lang: locale, slug: nome },
			props:
				locale === 'pt-BR'
					? brProjetos.find((projeto) => projeto.file.includes(nome))
					: enProjetos.find((projeto) => projeto.file.includes(nome))
		}))
	);
}

type Props = MarkdownInstance<Record<string, any>>;

const projeto = Astro.props;
const { Content } = projeto;
---

<ProjetoPageLayout {...projeto.frontmatter as MdFrontmatter}>
	<Content />
</ProjetoPageLayout>
